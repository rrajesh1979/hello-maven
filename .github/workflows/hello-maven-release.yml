name: hello-maven-release
on:
  push:
    tags:
      - "v*"
    branches:
      - 'master'
jobs:
  build-jar-job:
    name: 'Build JAR'
    runs-on: ubuntu-latest
    env:
      working-dir: ./hello-maven-build-dir
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 17'
        uses: actions/setup-java@v1
        with:
          java-version: 17
          cache: 'maven'

      - name: 'Build JAR'
        run: |
          ./mvnw clean package -DskipTests

      - name: 'Publish JAR'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'hello-maven-release'
          path: /home/runner/work/hello-maven/hello-maven/target/hello-maven*.jar

      - name: 'Download asset'
        uses: actions/download-artifact@v2
        with:
          name: hello-maven-release

      - run: |
          ls -a
          tree -L 3

      - name: 'Archive'
        uses: thedoctor0/zip-release@master
        with:
          filename: hello-maven-release.zip

      - run: echo "github.ref is " ${{github.ref}}

      - name: 'Create Release'
#        if: contains(github.ref, 'v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: v${{github.run_number}}
          release_name: Hello Maven Release V${{github.run_number}}
          body: |
            Initial release
          draft: false
          prerelease: false

      - name: 'Upload Release Asset'
#        if: contains(github.ref, 'v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ./hello-maven-release.zip
          asset_name: hello-maven-v${{github.run_number}}.zip
          asset_content_type: application/zip

      - name: 'Write Upload URL To File'
#        if: contains(github.ref, 'v')
        run: |
          echo "${{steps.create_release.outputs.upload_url}}" > upload_url.txt
      - name: 'Publish Upload URL'
#        if: contains(github.ref, 'v')
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'upload_url.txt'
          path: 'upload_url.txt'

      - run: |
          ls -a
          tree -L 3
          cat upload_url.txt
          

  build-non-windows-image:
    name: 'Build Non-Windows Image'
    needs: [ build-jar-job ]
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest' ]
        include:
          - os: 'ubuntu-latest'
            label: 'linux'
          - os: 'macos-latest'
            label: 'mac'
    runs-on: ${{matrix.os}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 17'
        uses: actions/setup-java@v1
        with:
          java-version: 17
          cache: 'maven'

      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@2.0
        with:
          graalvm-version: '20.1.0.java11'

      - name: 'Install Native Image Plugin'
        run: |
          gu install native-image

      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'hello-maven-1.0-SNAPSHOT.jar'

      - name: 'Get Release URL'
        # if: contains(github.ref, 'v')
        uses: actions/download-artifact@v2-preview
        with:
          name: 'upload_url.txt'

      - name: 'Get Upload URL'
        # if: contains(github.ref, 'v')
        run: |
          echo "::set-env name=UPLOAD_URL::$(cat upload_url.txt)"

      - name: 'Build Native Image'
        run: |
          native-image \
          --no-server \
          --no-fallback \
          # -H:ReflectionConfigurationResources=reflection-config.json \
          # -H:IncludeResources=logback.xml \
          --allow-incomplete-classpath \
          -jar hello-maven-1.0-SNAPSHOT.jar

      - name: 'Publish Native Image'
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'hello-maven-${{matrix.label}}'
          path: 'hello-maven-all'

      - name: 'Release Native Image Asset'
        if: success() ##&& contains(github.ref, 'v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{env.UPLOAD_URL}}
          asset_name: 'hello-maven-${{matrix.label}}'
          asset_path: 'hello-maven-all'
          asset_content_type: application/octet-stream