name: Code Build
on:
  push:
    tags:
      - "v*"
    branches:
      - 'master'
jobs:
  build-jar-job:
    name: 'Build JAR'
    runs-on: ubuntu-latest
    env:
      working-dir: ./hello-maven-build-dir
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 17'
        uses: actions/setup-java@v1
        with:
          java-version: 17
          cache: 'maven'

      - name: 'Build JAR'
        run: |
          ./mvnw clean package -DskipTests

      - name: 'Publish JAR'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'hello-maven-release'
          path: /home/runner/work/hello-maven/hello-maven/target/hello-maven*.jar

      # Create a release
      - name: Run JReleaser
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Download asset'
        uses: actions/download-artifact@v2
        with:
          name: hello-maven-release

      - run: |
          ls -a
          tree -L 3

      - name: 'Archive'
        uses: thedoctor0/zip-release@master
        with:
          filename: hello-maven-release.zip

      - run: echo "github.ref is " ${{github.ref}}

      - name: 'Create Release'
#        if: contains(github.ref, 'v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: v${{github.run_number}}
          release_name: Hello Maven Release V${{github.run_number}}
          body: |
            Initial release
          draft: false
          prerelease: false

      - name: 'Upload Release Asset'
#        if: contains(github.ref, 'v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ./hello-maven-release.zip
          asset_name: hello-maven-v${{github.run_number}}.zip
          asset_content_type: application/zip

      - name: 'Write Upload URL To File'
#        if: contains(github.ref, 'v')
        run: |
          echo "${{steps.create_release.outputs.upload_url}}" > upload_url.txt
      - name: 'Publish Upload URL'
#        if: contains(github.ref, 'v')
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'upload_url.txt'
          path: 'upload_url.txt'

      - run: |
          ls -a
          tree -L 3
          cat upload_url.txt
          
